name: test for pull_request

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches-ignore:
      - 'release'
  pull_request:
    branches-ignore:
      - 'release'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test-ubuntu:
    name: test for pull_request
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-18.04, ubuntu-latest ]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout code
        uses: actions/checkout@v2

      # ensure the path and files of project
      - name: ensure the path and files of project
        run: sudo apt install tree; tree

      - name: Use cmake
        run: cmake --version

      - name: prepare folder
        run: cmake -E make_directory ./CMAKE_DEBUG_PATH

      - name: cmake prepare for compile
        working-directory: ./CMAKE_DEBUG_PATH
        run: cmake .. -DCMAKE_BUILD_TYPE=DEBUG -DMULTIPLY_TIMES=0

      - name: cmake compile
        working-directory: ./CMAKE_DEBUG_PATH/lab_00
        run: cmake --build . --config DEBUG --parallel

      - name: cmake compile
        working-directory: ./CMAKE_DEBUG_PATH/algorithm/2021F
        run: cmake --build . --config DEBUG --parallel

      - name: cmake compile
        working-directory: ./CMAKE_DEBUG_PATH/algorithm/
        run: cmake --build . --config DEBUG --parallel

      - name: cmake compile
        working-directory: ./CMAKE_DEBUG_PATH
        run: cmake --build . --config DEBUG --parallel

      - name: cmake test
        working-directory: ./CMAKE_DEBUG_PATH
        run: ctest  --parallel $(nproc)

      - name: tree
        run: tree
  test-windows:
    name: test for pull_request
    runs-on: windows-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: Use cmake
        run: cmake --version

      - name: prepare folder
        run: cmake -E make_directory ./CMAKE_DEBUG_PATH

      - name: cmake prepare for compile
        working-directory: ./CMAKE_DEBUG_PATH
        run: cmake .. -DCMAKE_BUILD_TYPE=DEBUG -DMULTIPLY_TIMES=0

      - name: cmake compile
        working-directory: ./CMAKE_DEBUG_PATH/lab_00
        run: cmake --build . --config DEBUG --parallel

      - name: cmake compile
        working-directory: ./CMAKE_DEBUG_PATH/algorithm/2021F
        run: cmake --build . --config DEBUG --parallel

      - name: cmake compile
        working-directory: ./CMAKE_DEBUG_PATH/algorithm/
        run: cmake --build . --config DEBUG --parallel

      - name: cmake compile
        working-directory: ./CMAKE_DEBUG_PATH
        run: cmake --build . --config DEBUG --parallel
  # This workflow contains a single job called "build"
  build:
    name: test for the release script
    needs: [ test-ubuntu,test-windows ]
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-18.04, ubuntu-latest,windows-latest ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout code
        uses: actions/checkout@v2

      # ensure the path and files of project
      - name: ensure the path and files of project
        run: sudo apt install tree; tree
        if: ${{matrix.os != 'windows-latest'}}

      - name: run script
        working-directory: ./script
        run: python3 file_template.py

      - name: tree the packet
        run: tree
        if: ${{matrix.os != 'windows-latest'}}

